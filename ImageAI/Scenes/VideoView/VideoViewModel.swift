//
//  VideoViewModel.swift
//  ImageAI
//
//  Created by Martin Lukacs on 08/08/2021.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates
//

import AVFoundation
import Combine
import Foundation
import Resolver

final class VideoViewModel: ObservableObject {
    @Injected private var cameraRepository: CameraManager

    private var cancellables = Set<AnyCancellable>()

    func checkCameraRights() {
        cameraRepository.checkCameraRights()
    }

    func getCurrentAVSession() -> AVCaptureSession {
        cameraRepository.session
    }

    init() {
        setUp()
    }
}

extension VideoViewModel {
    private func setUp() {
        cameraRepository.canStartSession
            .receive(on: DispatchQueue.main)
            .sink(receiveCompletion: { completion in
                switch completion {
                case .finished:
                    break
                case let .failure(error):
                    print(error.localizedDescription)
//                    Logger.networking.debug("\(error.getTypeDescription()): \(error.localizedDescription)")
                }
            }) { [weak self] state in
                    guard state else {
                        return
                    }
                    self?.cameraRepository.session.startRunning()
            }.store(in: &cancellables)
    }
}
